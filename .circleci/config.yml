version: 2.1
orbs:
  node: circleci/node@4.1.0
  aws-s3: circleci/aws-s3@1.0.15
  queue: eddiewebb/queue@1.3.0

variables:
  - &workspace /home/circleci/project
  - &build_image circleci/node:14.1.0-browsers

jobs:
  checkout_code:
    docker:
      - image: *build_image
    working_directory: *workspace
    steps:
      - checkout
      - node/install-packages:
          cache-path: ./node_modules
          app-dir: .
      - persist_to_workspace:
          root: *workspace
          paths:
            - .
  lint:
    docker:
      - image: *build_image
    working_directory: *workspace
    steps:
      - attach_workspace:
          at: *workspace
      - run: npm run lint
  build:
    docker:
      - image: *build_image
    working_directory: *workspace
    parameters:
      helix_host:
        description: The URI for helix back end
        type: string
    steps:
      - attach_workspace:
          at: *workspace
      - run:
          name: Set up env
          command: echo 'export NEXT_PUBLIC_HELIX_HOST='<< parameters.helix_host >>'' >> $BASH_ENV
      - run:
          name: Build App
          command: npm run build
      - persist_to_workspace:
          root: *workspace
          paths:
            - out
  deploy:
    docker:
      - image: cimg/python:3.6
    parameters:
      bucket:
        description: The S3 Bucket to sync files to.
        type: string
    steps:
      - attach_workspace:
          at: *workspace
      - aws-s3/sync:
          from: out
          overwrite: true
          to: 's3://<< parameters.bucket >>'
      - run:
          name: Rename page HTML files
          command: ./scripts/modify-deploy-files.sh
      - aws-s3/copy:
          arguments: '--content-type "text/html"'
          from: out/about
          to: 's3://<< parameters.bucket >>'
      - aws-s3/copy:
          arguments: '--content-type "text/html"'
          from: out/apply
          to: 's3://<< parameters.bucket >>'
      - run:
          name: Invalidate Cloudfront
          command: |
            export DIST_ID=$(aws cloudfront list-distributions --query "DistributionList.Items[?Aliases.Items[?@=='<< parameters.bucket >>']].Id | [0]" | tr -d '"')
            aws cloudfront create-invalidation --distribution-id ${DIST_ID} --paths "/*"
  e2e:
    docker:
      - image: cimg/node:14.14-browsers
    working_directory: *workspace
    steps:
      - attach_workspace:
          at: *workspace
      - run:
          name: Running landing page e2e test
          command: npm run e2e
      - store_artifacts:
          path: /home/circleci/project/.screenshots
  e2e_local:
    docker:
      - image: cimg/node:14.14-browsers
    working_directory: *workspace
    steps:
      - attach_workspace:
          at: *workspace
      - run:
          name: Serve site locally
          command: npx serve out -p 3000
          background: true
      # wait for the server to start responding.
      - run:
          name: Wait for server to connect
          shell: /bin/sh
          command: wget --spider --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 -t 20 http://localhost:3000
      - run:
          name: Running landing page e2e test against local build
          environment:
            COMMIT_DEV_HOST: http://localhost:3000
          command: npm run e2e
      - store_artifacts:
          path: /home/circleci/project/.screenshots

workflows:
  version: 2

  feature_branch:
    jobs:
      - checkout_code:
          filters:
            branches:
              ignore:
                - main
                - launch
      - lint:
          requires:
            - checkout_code
      - build:
          name: build_feature
          helix_host: ''
          requires:
            - checkout_code
      - e2e_local:
          context: test-envs
          requires:
            - build_feature

  main:
    jobs:
      - checkout_code:
          filters:
            branches:
              only:
                - main
      - build:
          name: build_staging
          helix_host: https://api-public.commit-staging.dev/email/apply
          requires:
            - checkout_code
      - deploy:
          name: deploy_staging
          bucket: commit-staging.dev
          requires:
            - build_staging
      - e2e:
          context: test-envs
          requires:
            - deploy_staging
      - build:
          name: build_production
          helix_host: https://api-public.commit.dev/email/apply
          requires:
            - checkout_code
      - wait_for_approval:
          type: approval
          requires:
            - deploy_staging
            - build_production
      - queue/block_workflow:
          name: queue_for_production_deploy
          time: '30'
          requires:
            - wait_for_approval
      - deploy:
          name: deploy_production
          bucket: commit.dev
          requires:
            - build_production
            - queue_for_production_deploy

  launch:
    jobs:
      - checkout_code:
          filters:
            branches:
              only:
                - launch
      - build:
          name: build_feature
          helix_host: https://api-public.commit-staging.dev/email/apply
          requires:
            - checkout_code
      - deploy:
          name: deploy_staging
          bucket: commit-staging.dev
          requires:
            - build_feature
      - e2e:
          context: test-envs
          requires:
            - deploy_staging
